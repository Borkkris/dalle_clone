import React, { useState} from 'react';
import {useNavigate } from 'react-router-dom';

import { preview } from '../assets';

// access to the getRandomPrompt function
import { getRandomPrompt } from '../utils';

import { FormField, Loader } from '../components'
const CreatePost = () => {
  // This will help us navigate back to the homepage since the post is created
  const navigate = useNavigate();

  const [form, setForm] = useState({
    name:'',
    prompt:'',
    photo:'',
  });

  // this will help making contact with the API and while we are waiting to get back the image
  const [generatingImg, setGeneratingImg] = useState(false)
  const [loading, setLoading] = useState(false)

  // calls our backend
   const generateImage = async () => {
    if (form.prompt) {
      try {
        setGeneratingImg(true);
        const response = await fetch('https://dall-e-97hy.onrender.com/api/v1/dalle', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            prompt: form.prompt,
          }),
        });
        const data = await response.json();

        // how we gonna safe and render the image
        setForm({ ...form, photo:`data:image/jpeg;base64,${data.photo}`})
      } catch (error) {
          alert(error);
        // in case something happens we set the loading state of setGeneratingImg to false
      } finally {
        setGeneratingImg(false)
      }
      // if we dont have a prompt...
    } else {
      alert('please enter a prompt')
    }
  }

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (form.prompt && form.photo) {
      setLoading(true);

      try {
        const response = await fetch('https://dall-e-97hy.onrender.com/api/v1/post', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(form)
        })
        
        
        // once we get the response we can await the response.json, which means we got it successfully
        await response.json();
        // after that we finally can navigate to homepage to see our image
        navigate ('/');
      } catch (err) {
        alert(err)
      } finally{
        setLoading(false)
      }
    } else {
      alert('Please enter a prompt and generate an image')
    }
  }

  // calls the setForm state there we wan to spread the intire form and want to update the e.target.name with the newly created e.target.value (the character we type in)
  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value})
  }

  // calls our utility function to make sure we get a new prompt
  const handleSupriseMe = () => {
    const RandomPrompt = getRandomPrompt(form.prompt);
    setForm({ ...form, prompt: RandomPrompt })
  }

  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">Create</h1>
        <p className="mt-2 text-[#666e75] text-[16px]">Create imaginative and visually stunning images generated by DALL-E AI and share them with the community</p>
      </div>
      <form className="mt-16 max-w-3xl" onSubmit={handleSubmit}>
        <div className="flex flex-col gap-5">
          <FormField
            labelName="Your Name"
            type="text"
            name="name"
            placeholder="John Doe"
            value={form.name}
            handleChange={handleChange} />

          <FormField
            labelName="Prompt"
            type="text"
            name="prompt"
            placeholder="An oil painting portrait of a capybara wearing medieval royal robes and an ornate crown on a dark background"
            value={form.prompt}
            handleChange={handleChange}
            isSupriseMe
            handleSupriseMe={handleSupriseMe} />
          
          <div className="relative bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 w-64 p-3 h-64 flex justify-center items-center">
            {form.photo ? (
              <img 
                className="w-full h-full object-contain"
                src={form.photo}
                alt={form.prompt}
                />
            ) : (
              <img
                className="w-9/12 h-9/12 object-contain opacity-40"
                src={preview}
                alt="preview" />
            )}
            {generatingImg && (
              <div className="absolute inset-0 z-0 flex justify-center items-center bg-[rgba(0,0,0, 0.5)] rounded-lg">
                <Loader />
              </div>
            )}
          </div>
        </div>

        <div className="mt-5 flex gap-5">
          <button 
            className="font-medium bg-green-700 text-white text-sm rounded-md w-full sm:w-auto px-5 py-3 text-center"
            type="button"
            onClick={generateImage}
          >
            {generatingImg ? 'Generating' : 'Generate'}
          </button>
        </div>
        <p className="border-[1px] bg-amber-50 border-gray-400 rounded text-[#cb5d51] p-4 mt-4 text-[16px]">Due to the <span className="font-bold">SyntaxError: Unexpected token 'B', "Billing ha"... is not valid JSON</span>, it is currently not possible to generate images.</p>

        <div className="mt-10">
          <p className="mt-2 text-[#666e75] text-[14px]">Once you created the image you want, you can share it with others in the community</p>
          <button
            className="mt-3 text-white bg-[#6469ff] font-medium rounded-md w-full text-sm sm:w-auto px-5 py-3 text-center"
            type="button"
            onClick={handleSubmit}
            >
            {loading ? 'sharing' : 'share with the community' }
          </button>
        </div>
      </form>
    </section>
  )
}

export default CreatePost