import React, { useState, useEffect } from 'react';
import { Card, FormField, Loader } from '../components';

const RenderCards = ({data, title}) => {
  // if data length is greater than 0 we want to render the Card Component passing all of the post data to each individual card
  if (data?.length > 0) { 
    return data.map((post) => <Card key={post._id} {...post} />)
  } 
  return (
    <h2 className="mt-5 font-bold text-[#6469ff] text-xl uppercase">
      {title}
    </h2>
  )
}

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchText, setSearchText] = useState('');
  const [searchedResults, setSearchedResults] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null);

  // is called at the start once the component loads
  useEffect(() => {
    const fetchPosts = async() => {
      setLoading(true)
      try {
        const response = await fetch('https://dalle-arbb.onrender.com/api/v1/post', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      });
        // check if the repsonse is ok
        if(response.ok) {
          const result = await response.json();
          // reverse because we want to see the newest posts on the top
          setAllPosts(result.data.reverse());
        }
      } catch (error) {
        alert(error)
      }finally{
        setLoading(false)
      }
    }
    fetchPosts();
  }, []);
  
  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);

    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
      const searchResults = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) 
      || item.prompt.toLowerCase().includes(searchText.toLowerCase()))

      setSearchedResults(searchResults);
    }, 500)
    );
  }

  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">Community Showcase</h1>
        <p className="mt-2 text-[#666e75] text-[16px]">Browse through a collection of imaginative and visually stunning images generated by DALL-E AI</p>
      </div>

      <div className="mt-16">
        <FormField
          LabelName="Search posts"
          type="text"
          name="text"
          placeholder="Search posts"
          value={searchText}
          handleChange={handleSearchChange} />
      </div>

      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
          {/* if there is a searchterm then render the h2 tag. Needs to be created! */}
          {searchText && (
            <h2 className="font-medium text-[#66e75] text-xl mb-3">
              Showing results for <span className="text-[#222328]">{searchText}</span>
            </h2>
          )}
          <div className="Grid lg:grid-cols-4 md:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
            {searchText ? (
              // will show the searchterm results
              <RenderCards
                data={searchedResults}
                title="No search results found"
              />
            ):(
              // will show all the posts
              <RenderCards
                data={allPosts}
                title="no posts found"
              />
              )}
          </div>
          </>
        )}
      </div>
    </section>
  )
}

export default Home